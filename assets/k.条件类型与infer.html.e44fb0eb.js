import{_ as o,r as c,o as l,a as r,d as n,e as p,w as e,F as k,b as t,f as s}from"./app.28445bf9.js";const i={},u=t(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><h2 id="\u6761\u4EF6\u7C7B\u578B\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u7C7B\u578B\u57FA\u7840" aria-hidden="true">#</a> \u6761\u4EF6\u7C7B\u578B\u57FA\u7840</h2><p>\u6761\u4EF6\u7C7B\u578B\u7684\u8BED\u6CD5\u7C7B\u4F3C\u4E8E\u5E73\u5E38\u4F7F\u7528\u7684\u4E09\u5143\u8868\u8FBE\u5F0F(\u4F2A\u4EE3\u7801)\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>ValueA <span class="token operator">===</span> ValueB <span class="token operator">?</span> Result1 <span class="token operator">:</span> Result2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4F46\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C \u6761\u4EF6\u7C7B\u578B\u4E2D\u4F7F\u7528 extends \u5224\u65AD\u7C7B\u578B\u7684\u517C\u5BB9\u6027\uFF0C \u800C\u975E\u5224\u65AD\u7C7B\u578B\u7684\u5168\u7B49\u6027\u3002 \u8FD9\u662F\u56E0\u4E3A\u5728\u7C7B\u578B\u5C42\u9762\u4E2D\uFF0C \u5BF9\u4E8E\u80FD\u591F\u8FDB\u884C\u8D4B\u503C\u64CD\u4F5C\u7684\u4E24\u4E2A\u53D8\u91CF\uFF0C \u6211\u4EEC<strong>\u5E76\u4E0D\u9700\u8981\u4ED6\u4EEC\u7684\u7C7B\u578B\u5B8C\u5168\u76F8\u7B49\uFF0C \u53EA\u9700\u8981\u5177\u5907\u517C\u5BB9\u6027</strong>\uFF0C \u5BF9\u4E8E\u4E24\u4E2A\u5B8C\u5168\u76F8\u540C\u7684\u7C7B\u578B\uFF0C \u5176 extends \u81EA\u7136\u4E5F\u662F\u6210\u7ACB\u7684</p><p>\u6761\u4EF6\u7C7B\u578B\u7EDD\u5927\u90E8\u5206\u573A\u666F\u4E0B\u56DE\u5408\u6CDB\u578B\u4E00\u8D77\u4F7F\u7528\uFF0C \u6CDB\u578B\u53C2\u6570\u7684\u5B9E\u9645\u7C7B\u578B\u4F1A\u5728\u5B9E\u9645\u8C03\u7528\u65F6\u624D\u88AB\u586B\u5145\uFF08\u7C7B\u578B\u522B\u540D\u4E2D\u663E\u793A\u4F20\u5165\uFF0C \u6216\u8005\u51FD\u6570\u4E2D\u9690\u5F0F\u63D0\u53D6\uFF09\uFF0C \u800C\u6761\u4EF6\u7C7B\u578B\u5728\u8FD9\u4E00\u57FA\u7840\u4E0A\uFF0C \u53EF\u4EE5\u57FA\u4E8E\u586B\u5145\u540E\u7684\u6CDB\u578B\u53C2\u6570\u505A\u8FDB\u4E00\u6B65\u7684\u7C7B\u578B\u64CD\u4F5C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">LiteralType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;other&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Res1</span> <span class="token operator">=</span> LiteralType<span class="token operator">&lt;</span><span class="token string">&#39;cqc&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;string&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Res2</span> <span class="token operator">=</span> LiteralType<span class="token operator">&lt;</span><span class="token number">233</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;other&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u540C\u4E09\u5143\u8868\u8FBE\u5F0F\u4E00\u6837\uFF0C \u6761\u4EF6\u7C7B\u578B\u4E2D\u4E5F\u5E38\u89C1\u591A\u5C42\u5D4C\u5957\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">LiteralType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span>
 <span class="token operator">?</span> <span class="token string">&#39;string&#39;</span>
 <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span>
 <span class="token operator">?</span> <span class="token string">&#39;number&#39;</span>
 <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span>
 <span class="token operator">?</span> <span class="token string">&#39;boolean&#39;</span>
 <span class="token operator">:</span> <span class="token string">&#39;other&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Res1</span> <span class="token operator">=</span> LiteralType<span class="token operator">&lt;</span><span class="token string">&#39;cqc&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;string&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Res2</span> <span class="token operator">=</span> LiteralType<span class="token operator">&lt;</span><span class="token number">233</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;number&#39;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u800C\u5728\u51FD\u6570\u4E2D\uFF0C \u6761\u4EF6\u7C7B\u578B\u4E0E\u6CDB\u578B\u642D\u914D\u540C\u6837\u975E\u5E38\u5E38\u89C1\uFF0C \u8003\u8003\u4F60\uFF0C \u4EE5\u4E0B\u8FD9\u4E2A\u51FD\u6570\uFF0C \u6211\u4EEC\u5E94\u8BE5\u5982\u4F55\u6807\u6CE8\u5B83\u7684\u8FD4\u56DE\u503C\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">universalAdd</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> bigint<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5F53\u6211\u4EEC\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\u65F6\u5019\uFF0C \u7531\u4E8E\u4E24\u4E2A\u53C2\u6570\u90FD\u5F15\u7528\u4E86\u6CDB\u578B\u53C2\u6570 T\uFF0C \u56E0\u6B64\u6CDB\u578B\u4F1A\u88AB\u586B\u5145\u4E3A\u4E00\u4E2A\u8054\u5408\u7C7B\u578B:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">universalAdd</span><span class="token punctuation">(</span><span class="token number">233</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// T \u586B\u5145\u4E3A 233 | 23</span>
<span class="token function">universalAdd</span><span class="token punctuation">(</span><span class="token string">&#39;cqc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;233&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// T \u586B\u5145\u4E3A &#39;cqc&#39; | &#39;233&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u90A3\u4E48\u6B64\u65F6\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u5C31\u9700\u8981\u4ECE\u8FD9\u4E2A\u5B57\u9762\u91CF\u8054\u5408\u7C7B\u578B\u4E2D\u63A8\u5BFC\u56DE\u5176\u539F\u672C\u7684\u57FA\u7840\u7C7B\u578B\u3002 \u5728\u7C7B\u578B\u5C42\u7EA7\u4E00\u8282\u4E2D\uFF0C \u6211\u4EEC\u77E5\u9053 <strong>\u540C\u4E00\u57FA\u7840\u7C7B\u578B\u7684\u5B57\u9762\u91CF\u8054\u5408\u7C7B\u578B\uFF0C \u5176\u53EF\u4EE5\u88AB\u8BA4\u4E3A\u662F\u6B64\u57FA\u7840\u7C7B\u578B\u7684\u5B50\u7C7B\u578B</strong>\uFF0C \u5373 <code>&#39;cqc&#39; | &#39;233&#39;</code> \u662F string \u7684\u5B50\u7C7B\u578B</p><p>\u56E0\u6B64\uFF0C \u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5D4C\u5957\u7684\u6761\u4EF6\u7C7B\u578B\u6765\u8FDB\u884C\u5B57\u9762\u91CF\u7C7B\u578B\u5230\u57FA\u7840\u7C7B\u578B\u7684\u63D0\u53D6:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">LiteralToPrimitive<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span>
 <span class="token operator">?</span> <span class="token builtin">string</span>
 <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span>
 <span class="token operator">?</span> <span class="token builtin">number</span>
 <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">bigint</span>
 <span class="token operator">?</span> bigint
 <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

 <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">universalAdd</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> bigint<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> LiteralToPrimitive<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>


  <span class="token function">universalAdd</span><span class="token punctuation">(</span><span class="token string">&#39;cqc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;233&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
  <span class="token function">universalAdd</span><span class="token punctuation">(</span><span class="token number">233</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
  <span class="token function">universalAdd</span><span class="token punctuation">(</span><span class="token number">10n</span><span class="token punctuation">,</span> <span class="token number">10n</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bigint</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u6761\u4EF6\u7C7B\u578B\u8FD8\u53EF\u4EE5\u7528\u6765\u5BF9\u66F4\u590D\u6742\u7684\u7C7B\u578B\u8FDB\u884C\u6BD4\u8F83\uFF0C \u6BD4\u5982\u51FD\u6570\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Func</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FunctionConditionType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Func<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span>
 <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
 <span class="token operator">?</span> <span class="token string">&#39;A string return func!&#39;</span>
 <span class="token operator">:</span> <span class="token string">&#39;A non-string return func&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">r1</span> <span class="token operator">=</span> FunctionConditionType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// A string return func!</span>
<span class="token keyword">type</span> <span class="token class-name">r2</span> <span class="token operator">=</span> FunctionConditionType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// A non-string return func</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5728\u8FD9\u91CC\uFF0C \u6211\u4EEC\u7684\u6761\u4EF6\u7C7B\u578B\u7528\u4E8E\u5224\u65AD\u4E24\u4E2A\u51FD\u6570\u7C7B\u578B\u662F\u5426\u5177\u6709\u517C\u5BB9\u6027\uFF0C \u800C\u6761\u4EF6\u4E2D\u5E76\u4E0D\u9650\u5236\u6B21\u6570\u7C7B\u578B\uFF0C \u4EC5\u6BD4\u8F83\u4E8C\u8005\u7684\u8FD4\u56DE\u503C\u7C7B\u578B</p><p>\u4E0E\u6B64\u540C\u65F6\uFF0C \u5B58\u5728\u6CDB\u578B\u7EA6\u675F\u548C\u6761\u4EF6\u7C7B\u578B\u4E24\u4E2A extends \u53EF\u80FD\u4F1A\u8BA9\u4F60\u611F\u5230\u7591\u60D1\uFF0C \u4F46\u4ED6\u4EEC\u4EA7\u751F\u4F5C\u7528\u7684\u65F6\u673A\u5B8C\u5168\u4E0D\u540C\uFF0C \u6CDB\u578B\u7EA6\u675F\u8981\u6C42\u4F60\u4F20\u5165\u7B26\u5408\u7ED3\u6784\u7684\u7C7B\u578B\u53C2\u6570\uFF0C \u76F8\u5F53\u4E8E<strong>\u53C2\u6570\u6821\u9A8C</strong>\u3002 \u800C\u6761\u4EF6\u7C7B\u578B\u4F7F\u7528\u7C7B\u578B\u53C2\u6570\u8FDB\u884C\u6761\u4EF6\u5224\u65AD\uFF08\u5C31\u50CF if else\uFF09\uFF0C \u76F8\u5F53\u4E8E<strong>\u5B9E\u9645\u5185\u90E8\u903B\u8F91</strong></p><h2 id="infer-\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#infer-\u5173\u952E\u5B57" aria-hidden="true">#</a> infer \u5173\u952E\u5B57</h2>`,21),b=s("\u4E0A\u9762\u8BB2\u5230\u7684\u8FD9\u4E9B\u6761\u4EF6\u7C7B\u578B\uFF0C \u672C\u8D28\u4E0A\u5C31\u662F\u5728\u6CDB\u578B\u57FA\u4E8E\u8C03\u7528\u586B\u5145\u7C7B\u578B\u4FE1\u606F\u7684\u57FA\u7840\u4E0A\uFF0C \u65B0\u589E\u4E86"),m=n("strong",null,"\u57FA\u4E8E\u7C7B\u578B\u4FE1\u606F\u7684\u6761\u4EF6\u5224\u65AD",-1),d=s("\u3002 \u770B\u8D77\u6765\u4E0D\u9519\uFF0C \u4F46\u4F60\u53EF\u80FD\u4E5F\u53D1\u73B0\u4E86\u4E00\u4E2A\u65E0\u6CD5\u6EE1\u8DB3\u7684\u573A\u666F\uFF1A "),y=s("\u63D0\u53D6\u4F20\u5165\u7684\u7C7B\u578B\u4FE1\u606F"),g=n("p",null,[s("\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C \u5047\u5982\u6211\u4EEC\u4E0D\u5728\u6BD4\u8F83\u586B\u5145\u7684\u51FD\u6570\u7C7B\u578B\u662F\u5426\u662F "),n("code",null,"(...args: any[]) => string"),s(" \u7684\u5B50\u7C7B\u578B\uFF0C \u800C\u662F\u8981\u62FF\u5230\u5176\u8FD4\u56DE\u503C\u7C7B\u578B\u5462\uFF1F \u6216\u8005\u8BF4\uFF0C \u6211\u4EEC\u5E0C\u671B\u62FF\u5230\u586B\u5145\u7684\u7C7B\u578B\u4FE1\u606F\u7684\u4E00\u90E8\u5206\uFF0C \u800C\u4E0D\u662F\u53EA\u662F\u7528\u5B83\u6765\u505A\u6761\u4EF6\u5462\uFF1F")],-1),w=n("h3",{id:"\u51FD\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u51FD\u6570","aria-hidden":"true"},"#"),s(" \u51FD\u6570")],-1),v=s("typescript \u4E2D\u652F\u6301\u901A\u8FC7 infer \u5173\u952E\u5B57\u6765 "),h=s("\u5728\u6761\u4EF6\u7C7B\u578B\u4E2D\u63D0\u53D6\u7C7B\u578B\u7684\u67D0\u4E00\u90E8\u5206\u4FE1\u606F"),x=s("\uFF0C \u6BD4\u5982\u4E0A\u9762\u6211\u4EEC\u8981\u63D0\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\u7684\u8BDD\uFF0C \u53EF\u4EE5\u8FD9\u4E48\u653E\uFF1A"),T=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FunctionReturnType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span>
 <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span>
 <span class="token operator">?</span> <span class="token constant">R</span>
 <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">t</span> <span class="token operator">=</span> FunctionReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u770B\u8D77\u6765\u662F\u65B0\u670B\u53CB\uFF0C \u5176\u5B9E\u8FD8\u662F\u8001\u4F19\u8BA1\u3002 \u4E0A\u9762\u7684\u4EE3\u7801\u8868\u8FBE\u4E86\uFF0C \u5F53\u4F20\u5165\u7684\u7C7B\u578B\u53C2\u6570\u6EE1\u8DB3 <code>T extends (...args: any[]) =&gt; infer R</code> \u8FD9\u6837\u4E00\u4E2A\u7ED3\u6784\uFF08\u4E0D\u7528\u7BA1 <code>infer R</code>, \u5F53\u5B83\u662F any \u5C31\u884C\uFF09\uFF0C \u8FD4\u56DE <code>infer R</code> \u4F4D\u7F6E\u7684\u503C\uFF0C \u5373 R\u3002 \u5426\u5219\uFF0C \u8FD4\u56DE never</p><h3 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h3><p>\u8FD9\u91CC\u7684\u7C7B\u578B\u7ED3\u6784\u5F53\u7136\u4E0D\u5C40\u9650\u4E8E\u51FD\u6570\u7C7B\u578B\u7ED3\u6784\uFF0C \u8FD8\u53EF\u4EE5\u662F\u6570\u7EC4\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Swap<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token punctuation">,</span> <span class="token keyword">infer</span> <span class="token constant">B</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">r1</span> <span class="token operator">=</span> Swap<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token string">&#39;cqc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;233&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// \u7B26\u5408\u7ED3\u6784 \u66FF\u6362\u9996\u5C3E\u5143\u7D20 [&#39;233&#39;, &#39;cqc&#39;]</span>
<span class="token keyword">type</span> <span class="token class-name">r2</span> <span class="token operator">=</span> Swap<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u7531\u4E8E\u6211\u4EEC\u58F0\u660E\u7684\u7ED3\u6784\u662F\u4E00\u4E2A\u4EC5\u6709\u4E24\u4E2A\u5143\u7D20\u7684\u5143\u7EC4\uFF0C \u56E0\u6B64\u4E09\u4E2A\u5143\u7D20\u7684\u5143\u7EC4\u5C31\u88AB\u8BA4\u4E3A\u662F\u4E0D\u7B26\u5408\u7C7B\u578B\u7ED3\u6784\u6765\u3002 \u4F46\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5462 rest \u64CD\u4F5C\u7B26\u6765\u5904\u7406\u4EFB\u610F\u957F\u5EA6\u7684\u60C5\u51B5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//\u63D0\u53D6\u9996\u5C3E\u4E24\u4E2A</span>
<span class="token keyword">type</span> <span class="token class-name">ExtractStartAndEnd<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span>
 <span class="token keyword">infer</span> Start<span class="token punctuation">,</span>
 <span class="token operator">...</span><span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
 <span class="token keyword">infer</span> End
<span class="token punctuation">]</span>
 <span class="token operator">?</span> <span class="token punctuation">[</span>Start<span class="token punctuation">,</span> End<span class="token punctuation">]</span>
 <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token comment">// \u8C03\u6362\u9996\u5C3E\u4E24\u4E2A</span>
<span class="token keyword">type</span> <span class="token class-name">SwapStartAndEnd<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span>
 <span class="token keyword">infer</span> Start<span class="token punctuation">,</span>
 <span class="token operator">...</span><span class="token keyword">infer</span> Left<span class="token punctuation">,</span>
 <span class="token keyword">infer</span> End
<span class="token punctuation">]</span>
 <span class="token operator">?</span> <span class="token punctuation">[</span>End<span class="token punctuation">,</span> <span class="token operator">...</span>Left<span class="token punctuation">,</span> Start<span class="token punctuation">]</span>
 <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token comment">// \u8C03\u6362\u5F00\u5934\u4E24\u4E2A</span>
<span class="token keyword">type</span> <span class="token class-name">SwapFirstAndTwo<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span>
 <span class="token keyword">infer</span> First<span class="token punctuation">,</span>
 <span class="token keyword">infer</span> Second<span class="token punctuation">,</span>
 <span class="token operator">...</span><span class="token keyword">infer</span> Rest
<span class="token punctuation">]</span>
 <span class="token operator">?</span> <span class="token punctuation">[</span>Second<span class="token punctuation">,</span> First<span class="token punctuation">,</span> <span class="token operator">...</span>Rest<span class="token punctuation">]</span>
 <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">t1</span> <span class="token operator">=</span> ExtractStartAndEnd<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;cqc&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// [1, &#39;cqc&#39;]</span>
<span class="token keyword">type</span> <span class="token class-name">t2</span> <span class="token operator">=</span> SwapStartAndEnd<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;cqc&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;cqc&#39;, 2, 1]</span>
<span class="token keyword">type</span> <span class="token class-name">t3</span> <span class="token operator">=</span> SwapFirstAndTwo<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// [2, 1, 3, 4]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u662F\u7684\uFF0C infer \u751A\u81F3\u53EF\u4EE5\u548C rest \u64CD\u4F5C\u7B26\u4E00\u6837\u540C\u65F6\u63D0\u53D6\u4E00\u7EC4\u4E0D\u5B9A\u957F\u7684\u7C7B\u578B\uFF0C \u800C <code>...any[]</code> \u7684\u7528\u6CD5\u662F\u5426\u4E5F\u8BA9\u4F60\u76F4\u547C\u795E\u5947\uFF1F \u4E0A\u9762\u7684\u8F93\u5165\u8F93\u51FA\u4ECD\u7136\u90FD\u662F\u6570\u7EC4\uFF0C \u800C\u5B9E\u9645\u4E0A\u6211\u4EEC\u5B8C\u5168\u53EF\u4EE5\u8FDB\u884C\u7ED3\u6784\u5C42\u9762\u7684\u8F6C\u6362\u3002 \u6BD4\u5982\u4ECE\u6570\u7EC4\u5230\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ArrayItemType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> ElementType<span class="token operator">&gt;</span></span>
 <span class="token operator">?</span> ElementType
 <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">t1</span> <span class="token operator">=</span> ArrayItemType<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// never</span>
<span class="token keyword">type</span> <span class="token class-name">t2</span> <span class="token operator">=</span> ArrayItemType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name">t3</span> <span class="token operator">=</span> ArrayItemType<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string | number</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3" aria-hidden="true">#</a> \u63A5\u53E3</h3><p>infer \u7ED3\u6784\u4E5F\u53EF\u4EE5\u662F\u63A5\u53E3:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PropType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span>
 <span class="token punctuation">[</span>Key <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">R</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 <span class="token operator">?</span> <span class="token constant">R</span>
 <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

 <span class="token comment">// \u53CD\u8F6C\u952E\u540D\u4E0E\u952E\u503C</span>
<span class="token keyword">type</span> <span class="token class-name">ReverseKeyValue<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Record<span class="token operator">&lt;</span>
 <span class="token keyword">infer</span> <span class="token constant">K</span><span class="token punctuation">,</span>
 <span class="token keyword">infer</span> <span class="token constant">V</span>
<span class="token operator">&gt;</span></span>
 <span class="token operator">?</span> Record<span class="token operator">&lt;</span><span class="token constant">V</span> <span class="token operator">&amp;</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span>
 <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>




<span class="token keyword">type</span> <span class="token class-name">t1</span> <span class="token operator">=</span> PropType<span class="token operator">&lt;</span>
 <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token string">&#39;name&#39;</span>
<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string</span>

<span class="token keyword">type</span> <span class="token class-name">t2</span> <span class="token operator">=</span> PropType<span class="token operator">&lt;</span>
 <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token string">&#39;age&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;name&#39;</span>
<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string | number</span>


<span class="token keyword">type</span> <span class="token class-name">t3</span> <span class="token operator">=</span> ReverseKeyValue<span class="token operator">&lt;</span><span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token string">&#39;cqc&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// { cqc: &#39;name&#39; }</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>\u5728\u8FD9\u91CC\uFF0C \u4E3A\u4E86\u4F53\u73B0 infer \u4F5C\u4E3A\u7C7B\u578B\u5DE5\u5177\u7684\u5C5E\u6027\uFF0C \u6211\u4EEC\u7ED3\u5408\u4E86\u7D22\u5F15\u7C7B\u578B\u4E0E\u6620\u5C04\u7C7B\u578B\uFF0C \u4EE5\u53CA\u4F7F\u7528 <code>&amp; string</code> \u6765\u786E\u4FDD\u5C5E\u6027\u540D\u4F5C\u4E3A string \u7C7B\u578B\u7684\u5C0F\u6280\u5DE7\u3002</p><p>\u4E3A\u4EC0\u4E48\u9700\u8981\u8FD9\u4E2A\u5C0F\u6280\u5DE7\uFF0C \u5982\u679C\u4E0D\u4F7F\u7528\u4F1A\u6709\u4EC0\u4E48\u95EE\u9898\u5417\uFF1F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReverseKeyValue<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Record<span class="token operator">&lt;</span>
 <span class="token keyword">infer</span> <span class="token constant">K</span><span class="token punctuation">,</span>
 <span class="token keyword">infer</span> <span class="token constant">V</span>
<span class="token operator">&gt;</span></span>
 <span class="token operator">?</span> Record<span class="token operator">&lt;</span><span class="token constant">V</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span>   <span class="token comment">// type &#39;V&#39; does not satisfy the constraint &#39;string | number | symbol&#39;.ts(2344)</span>
 <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u660E\u660E\u7EA6\u675F\u5DF2\u7ECF\u58F0\u660E\u4E86 V \u7684\u7C7B\u578B\u662F string \u4E3A\u4EC0\u4E48\u8FD8\u662F\u62A5\u9519\u4E86</p><p>\u8FD9\u662F\u56E0\u4E3A\uFF0C \u6CDB\u578B\u53C2\u6570 V \u7684\u6765\u6E90\u662F\u4ECE\u952E\u503C\u7C7B\u578B\u63A8\u5BFC\u51FA\u6765\u7684\uFF0C typescript \u4E2D\u8FD9\u6837\u5BF9\u952E\u503C\u7C7B\u578B\u8FDB\u884C infer \u63A8\u5BFC\uFF0C \u5C06\u5BFC\u81F4\u7C7B\u578B\u4FE1\u606F\u4E22\u5931\uFF0C \u800C\u4E0D\u6EE1\u8DB3\u7D22\u5F15\u7B7E\u540D\u7C7B\u578B\u53EA\u5141\u8BB8 <code>string | number | symbol</code> \u7684\u8981\u6C42\u3002</p><p>\u8FD8\u8BB0\u5F97\u6620\u5C04\u7C7B\u578B\u7684\u5224\u65AD\u6761\u4EF6\u5417\uFF1F \u9700\u8981\u540C\u65F6\u6EE1\u8DB3\u5176\u4E24\u7AEF\u7684\u7C7B\u578B\uFF0C \u6211\u4EEC\u4F7F\u7528 <code>V &amp; string</code> \u8FD9\u4E00\u5F62\u5F0F\uFF0C\u5C31\u786E\u4FDD\u4E86\u6700\u7EC8\u7B26\u5408\u6761\u4EF6\u7684\u7C7B\u578B\u53C2\u6570 V \u4E00\u5B9A\u56DE\u6EE1\u8DB3 <code>string | never</code> \u8FD9\u4E2A\u7C7B\u578B\uFF0C \u56E0\u6B64\u53EF\u4EE5\u88AB\u89C6\u4E3A\u5408\u6CD5\u7684\u7D22\u5F15\u7B7E\u540D\u7C7B\u578B\u3002</p><h3 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PromiseValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span> <span class="token operator">?</span> <span class="token constant">V</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">r1</span> <span class="token operator">=</span> PromiseValue<span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
<span class="token keyword">type</span> <span class="token class-name">r2</span> <span class="token operator">=</span> PromiseValue<span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5C31\u50CF\u6761\u4EF6\u7C7B\u578B\u53EF\u4EE5\u5D4C\u5957\u4E00\u6837\uFF0C infer \u5173\u952E\u5B57\u4E5F\u7ECF\u5E38\u88AB\u4F7F\u7528\u5728\u5D4C\u5957\u7684\u573A\u666F\u4E2D\uFF0C \u5305\u62EC\u5BF9\u7C7B\u578B\u7ED3\u6784\u6DF1\u5C42\u4FE1\u606F\u7684\u63D0\u53D6\uFF0C \u4EE5\u53CA\u5BF9\u63D0\u53D6\u5230\u7C7B\u578B\u4FE1\u606F\u7684\u7B5B\u9009\u7B49\u3002 \u6BD4\u5982\u4E0A\u9762\u7684 PromiseValue\uFF0C \u5982\u679C\u4F20\u5165\u4E86\u4E00\u4E2A\u5D4C\u5957\u7684 Promise \u7C7B\u578B\u5C31\u5931\u6548\u4E86\uFF1A</p><p>\u8FD9\u65F6\u5019\u6211\u4EEC\u5C31\u9700\u8981 \u8FDB\u884C\u5D4C\u5957\u7684\u63D0\u53D6\u4E86\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PromiseValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">R</span><span class="token operator">&gt;</span></span>
 <span class="token operator">?</span> <span class="token constant">R</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">N</span><span class="token operator">&gt;</span></span>
  <span class="token operator">?</span> <span class="token constant">N</span>
  <span class="token operator">:</span> <span class="token constant">R</span>
 <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5F53\u7136\uFF0C \u8FD9\u4E2A\u65F6\u5019\u66F4\u5E94\u8BE5\u4F7F\u7528\u9012\u5F52\u6765\u5904\u7406\u4EFB\u610F\u7684\u5D4C\u5957\u6DF1\u5EA6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PromiseValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span> <span class="token operator">?</span> PromiseValue<span class="token operator">&lt;</span><span class="token constant">V</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">r</span> <span class="token operator">=</span> PromiseValue<span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6761\u4EF6\u7C7B\u578B\u5728\u6CDB\u578B\u7684\u57FA\u7840\u4E0A\u652F\u6301\u4E86\u57FA\u4E8E\u7C7B\u578B\u4FE1\u606F\u7684\u52A8\u6001\u6761\u4EF6\u5224\u65AD\uFF0C \u4F46\u65E0\u6CD5\u76F4\u63A5\u6D88\u8D39\u586B\u5145\u7C7B\u578B\u4FE1\u606F\uFF0C \u800C infer \u5173\u952E\u5B57 \u5219\u4E3A\u4ED6\u8865\u4E0A\u4E86\u8FD9\u4E00\u90E8\u5206\u80FD\u529B\uFF0C \u8BA9\u6211\u4EEC\u53EF\u4EE5\u8FDB\u884C\u66F4\u591A\u5947\u5999\u7684\u7C7B\u578B\u64CD\u4F5C\uFF0C typescript \u4E2D\u5185\u7F6E\u7684\u5DE5\u5177\u7C7B\u578B\u4E2D\u8FD8\u6709\u4E00\u4E9B\u57FA\u4E8E infer \u5173\u952E\u5B57\u7684\u5E94\u7528\uFF0C \u540E\u9762\u6211\u4EEC\u4F1A\u5728\u5185\u7F6E\u5DE5\u5177\u7C7B\u578B\u8BB2\u89E3\u4E2D\u4E86\u89E3\u5B83\u4EEC\u7684\u5177\u4F53\u5B9E\u73B0</p><h2 id="\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B</h2><p>\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\u542C\u8D77\u6765\u771F\u7684\u5F88\u9AD8\u7EA7\uFF0C \u4F46\u8FD9\u91CC\u548C\u5206\u5E03\u5F0F\u670D\u52A1\u5E76\u4E0D\u662F\u4E00\u56DE\u4E8B\u3002 <strong>\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\uFF0C \u4E5F\u79F0\u4F5C\u6761\u4EF6\u7C7B\u578B\u7684\u5206\u5E03\u5F0F\u7279\u6027</strong>\uFF0C \u53EA\u4E0D\u8FC7\u662F\u6761\u4EF6\u7C7B\u578B\u5728\u6EE1\u8DB3\u4E00\u5B9A\u60C5\u51B5\u4E0B\u4F1A\u6267\u884C\u7684\u903B\u8F91\u800C\u5DF2\uFF0C \u76F4\u63A5\u4E0A\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Condition<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">r1</span> <span class="token operator">=</span> Condition<span class="token operator">&lt;</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">5</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// 1 | 2 | 3</span>

<span class="token keyword">type</span> <span class="token class-name">r2</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">5</span> <span class="token keyword">extends</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">5</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span> <span class="token comment">// never</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u4E2A\u4F8B\u5B50\u53EF\u80FD\u8BA9\u4F60\u5145\u6EE1\u4E86\u7591\u60D1\uFF0C \u67D0\u4E9B\u5730\u65B9\u4F3C\u4E4E\u548C\u6211\u4EEC\u5B66\u4E60\u7684\u77E5\u8BC6\u5E76\u4E0D\u4E00\u6837\uFF1F \u5148\u4E0D\u8BF4\u8FD9\u4E24\u4E2A\u7406\u8BBA\u4E0A\u5E94\u8BE5\u6267\u884C\u7ED3\u679C\u4E00\u81F4\u7684\u7C7B\u578B\u522B\u540D\uFF0C \u4E3A\u4EC0\u4E48\u5728 r1 \u4E2D\u8BE1\u5F02\u7684\u8FD4\u56DE\u4E86\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\uFF1F</p><p>\u4ED4\u7EC6\u89C2\u5BDF\u5C31\u4F1A\u53D1\u73B0\uFF0C \u552F\u4E00\u7684\u5DEE\u5F02\u5C31\u662F\u5728 r1 \u4E2D\uFF0C \u8FDB\u884C\u5224\u65AD\u7684\u8054\u5408\u7C7B\u578B\u88AB\u4F5C\u4E3A\u6CDB\u578B\u53C2\u6570\u4F20\u5165\u7ED9\u53E6\u4E00\u4E2A\u72EC\u7ACB\u7684\u7C7B\u578B\u522B\u540D\uFF0C \u800C r2 \u4E2D\u76F4\u63A5\u5BF9\u8FD9\u4E24\u8005\u8FDB\u884C\u5224\u65AD\u3002</p>`,31),f=s("\u8BB0\u4F4F\u7B2C\u4E00\u4E2A\u5DEE\u5F02\uFF1A "),_=s("\u662F\u5426\u901A\u8FC7\u6CDB\u578B\u53C2\u6570\u4F20\u5165"),R=s("\u3002"),A=t(`<p>\u6211\u4EEC\u5728\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Naked<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> <span class="token string">&#39;Y&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;N&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Wrapped<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token builtin">boolean</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token string">&#39;Y&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;N&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">r3</span> <span class="token operator">=</span> Naked<span class="token operator">&lt;</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;N&#39; | &#39;Y&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">r4</span> <span class="token operator">=</span> Wrapped<span class="token operator">&lt;</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;N&#39;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u73B0\u5728\u6211\u4EEC\u90FD\u662F\u901A\u8FC7\u6CDB\u578B\u53C2\u6570\u4F20\u5165\u4E86\uFF0C \u4F46\u8BE1\u5F02\u7684\u4E8B\u60C5\u53C8\u53D1\u751F\u4E86\uFF0C \u4E3A\u4EC0\u4E48\u7B2C\u4E00\u4E2A\u8FD8\u662F\u4E2A\u8054\u5408\u7C7B\u578B\uFF1F \u7B2C\u4E8C\u4E2A\u5012\u662F\u597D\u7406\u89E3\u4E00\u4E9B \u5143\u7EC4\u7684\u6210\u5458\u6709\u53EF\u80FD\u662F\u6570\u5B57\u7C7B\u578B\uFF0C \u663E\u7136\u548C <code>[boolean]</code> \u4E0D\u517C\u5BB9\u3002</p><p>\u5728\u4ED4\u7EC6\u89C2\u5BDF\u7740\u4E24\u4E2A\u4F8B\u5B50\u4F60\u4F1A\u53D1\u73B0\uFF0C \u5B83\u4EEC\u552F\u4E00\u7684\u5DEE\u5F02\u5C31\u662F\u6761\u4EF6\u7C7B\u578B\u4E2D\u7684 <strong>\u6CDB\u578B\u53C2\u6570\u662F\u5426\u88AB\u6570\u7EC4\u5305\u88F9\u4E86</strong></p>`,4),V=s("\u7B2C\u4E8C\u4E2A\u5DEE\u5F02: "),N=s("\u6CDB\u578B\u53C2\u6570\u662F\u5426\u88AB\u6570\u7EC4\u5305\u88F9\u4E86"),q=t(`<p>\u540C\u65F6, \u4F60\u4F1A\u53D1\u73B0\u5728 r3 \u7684\u5224\u65AD\u4E2D\uFF0C \u5176\u8054\u5408\u7C7B\u578B\u7684\u4E24\u4E2A\u5206\u652F\uFF0C \u6070\u597D\u5BF9\u5E94\u5206\u522B\u4F7F\u7528 number \u548C boolean \u5176\u4F5C\u4E3A\u6761\u4EF6\u7C7B\u578B\u5224\u65AD\u65F6\u5019\u7684\u7ED3\u679C\u3002</p><p>\u628A\u4E0A\u9762\u7684\u7EBF\u7D22\u68B3\u7406\u4E00\u4E0B\uFF0C \u5176\u5B9E\u6211\u4EEC\u5C31\u6253\u503C\u5F97\u5230\u4E86\u6761\u4EF6\u7C7B\u578B\u5206\u5E03\u5F0F\u8D77\u4F5C\u7528\u7684\u6761\u4EF6\u3002</p><ul><li>\u9996\u5148\uFF0C <strong>\u4F60\u7684\u7C7B\u578B\u53C2\u6570\u9700\u8981\u662F\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u3002</strong></li><li>\u5176\u6B21\uFF0C <strong>\u7C7B\u578B\u53C2\u6570\u9700\u8981\u901A\u8FC7\u6CDB\u578B\u53C2\u6570\u7684\u65B9\u5F0F\u4F20\u5165\uFF0C \u800C\u4E0D\u80FD\u76F4\u63A5\u5728\u5916\u90E8\u8FDB\u884C\u5224\u65AD\uFF08\u7C7B\u4F3C r2\uFF09</strong></li><li>\u6700\u540E\uFF0C <strong>\u6761\u4EF6\u7C7B\u578B\u4E2D\u7684\u6CDB\u578B\u53C2\u6570\u4E0D\u80FD\u88AB\u5305\u88F9</strong></li></ul><p>\u800C\u6761\u4EF6\u7C7B\u578B\u5206\u5E03\u5F0F\u7279\u6027\u4F1A\u4EA7\u751F\u7684\u6548\u679C\u4E5F\u5F88\u660E\u663E\u4E86\uFF0C \u5373\u5C06\u8FD9\u4E2A\u8054\u5408\u7C7B\u578B\u62C6\u5F00\u6765\uFF0C \u6BCF\u4E2A\u5206\u652F\u5206\u522B\u8FDB\u884C\u4E00\u6B21\u6761\u4EF6\u7C7B\u578B\u5224\u65AD\uFF0C \u518D\u5C06\u6700\u540E\u7684\u7ED3\u679C\u5408\u5E76\u8D77\u6765\uFF08\u5982 Naked \u4E2D\uFF09\u3002 \u5982\u679C\u5728\u4E25\u8C28\u4E00\u4E9B\uFF0C \u5176\u5B9E\u6211\u4EEC\u5C31\u5F97\u5230\u4E86\u5B98\u65B9\u7684\u89E3\u91CA\uFF1A</p><p><strong>\u5BF9\u4E8E\u88F8\u7C7B\u578B\u53C2\u6570\u7684\u68C0\u67E5\u7C7B\u578B\uFF0C \u6761\u4EF6\u7C7B\u578B\u4F1A\u5728\u5B9E\u4F8B\u5316\u65F6\u671F\u81EA\u52A8\u5206\u53D1\u5230\u8054\u5408\u7C7B\u578B\u4E0A</strong>\u3002</p><p>\u8FD9\u91CC\u7684\u81EA\u52A8\u5206\u53D1\uFF0C \u6211\u4EEC\u53EF\u4EE5\u8FD9\u4E48\u7406\u89E3\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Naked<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> <span class="token string">&#39;Y&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;N&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// (number extends boolean ? &#39;Y&#39; : &#39;N&#39;) | (boolean extends boolean ? &#39;Y&#39; : &#39;N&#39;)</span>
<span class="token keyword">type</span> <span class="token class-name">r3</span> <span class="token operator">=</span> Naked<span class="token operator">&lt;</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;N&#39; | &#39;Y&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5199\u6210\u4F2A\u4EE3\u7801\u5176\u5B9E\u5C31\u662F\u8FD9\u6837\u7684</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> Res3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> input <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>input <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Res3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;Y&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    Res3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;N&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u8FD9\u91CC\u7684\u88F8\u7C7B\u578B\u53C2\u6570\uFF0C \u5176\u5B9E\u6307\u7684\u5C31\u662F\u6CDB\u578B\u53C2\u6570\u662F\u5426\u5B8C\u5168\u88F8\u9732\uFF0C \u6211\u4EEC\u4E0A\u9762\u4F7F\u7528\u6570\u7EC4\u5305\u88F9\u6CDB\u578B\u53C2\u6570\u53EA\u662F\u5176\u4E2D\u4E00\u79CD\u65B9\u5F0F\uFF0C \u6BD4\u5982\u8FD8\u53EF\u4EE5\u8FD9\u4E48\u505A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">NoDistribute<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Wrapped<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> NoDistribute<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token builtin">boolean</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token string">&#39;Y&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;N&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">r</span> <span class="token operator">=</span> Wrapped<span class="token operator">&lt;</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;N&#39;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C \u6211\u4EEC\u5E76\u4E0D\u662F\u667A\u6167\u901A\u8FC7\u88F8\u6CDB\u578B\u53C2\u6570\uFF0C \u6765\u786E\u4FDD\u5206\u5E03\u5F0F\u7279\u6027\u80FD\u591F\u53D1\u751F\u3002 \u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C \u6211\u4EEC\u4E5F\u9700\u8981\u5305\u62EC\u6CDB\u578B\u53C2\u6570\u6765\u8B66\u7528\u6389\u5206\u5E03\u5F0F\u7279\u6027\u3002 \u6700\u5E38\u89C1\u7684\u573A\u666F\u4E5F\u8BB8\u8FD8\u662F\u8054\u5408\u7C7B\u578B\u7684\u5224\u65AD\uFF0C \u5373\u6211\u4EEC\u4E0D\u5E0C\u671B\u8FDB\u884C\u8054\u5408\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u5224\u65AD\uFF0C\u5C31\u50CF\u5728\u6700\u521D\u7684 r2 \u4E2D\u90A3\u6837.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">CompareUnion<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token constant">U</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">r1</span> <span class="token operator">=</span> CompareUnion<span class="token operator">&lt;</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token keyword">type</span> <span class="token class-name">r2</span> <span class="token operator">=</span> CompareUnion<span class="token operator">&lt;</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u901A\u8FC7\u5C06\u53C2\u6570\u4E0E\u6761\u4EF6\u90FD\u5305\u88F9\u8D77\u6765\u7684\u65B9\u5F0F\uFF0C \u6211\u4EEC\u5BF9\u8054\u5408\u7C7B\u578B\u7684\u6BD4\u8F83\u5C31\u53D8\u6210\u4E86\u6570\u7EC4\u6210\u5458\u7C7B\u578B\u7684\u6BD4\u8F83\uFF0C \u5728\u6B64\u65F6\u5C31\u4F1A\u4E25\u683C\u9075\u5B88\u7C7B\u578B\u5C42\u7EA7\u4E00\u6587\u4E2D\u8054\u5408\u7C7B\u578B\u7684\u7C7B\u578B\u5224\u65AD\u4E86\uFF08\u5B50\u96C6\u4E3A\u5176\u5B50\u7C7B\u578B\uFF09</p><p>\u53E6\u5916\u4E00\u79CD\u60C5\u51B5\u5219\u662F\uFF0C\u5F53\u6211\u4EEC\u60F3\u5224\u65AD\u4E00\u4E2A\u7C7B\u578B\u662F\u5426\u4E3A never\u65F6\u5019\uFF0C \u4E5F\u53EF\u4EE5\u901A\u8FC7\u7C7B\u4F3C\u7684\u624B\u6BB5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IsNever<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">never</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">IsNeverRight<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token builtin">never</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">r1</span> <span class="token operator">=</span> IsNever<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// never</span>
<span class="token keyword">type</span> <span class="token class-name">r2</span> <span class="token operator">=</span> IsNever<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u91CC\u7684\u539F\u56E0\u5176\u5B9E\u5E76\u4E0D\u662F\u56E0\u4E3A\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\u3002 \u6211\u4EEC\u6B64\u524D\u5728\u7C7B\u578B\u5C42\u7EA7\u4E2D\u4E86\u89E3\u8FC7\uFF0C \u5F53\u6761\u4EF6\u7684\u5224\u65AD\u53C2\u6570\u4E3A any\uFF0C \u4F1A\u76F4\u63A5\u8FD4\u56DE\u6761\u4EF6\u7C7B\u578B\u4E24\u4E2A\u7ED3\u679C\u7684\u8054\u5408\u7C7B\u578B\u3002\u800C\u5728\u8FD9\u91CC\u5176\u5B9E\u7C7B\u4F3C\uFF0C \u5F53\u901A\u8FC7\u6CDB\u578B\u4F20\u5165\u7684\u53C2\u6570\u4E3A never\uFF0C \u5219\u4F1A\u76F4\u63A5\u8FD4\u56DE never.</p><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\u8FD9\u91CC\u7684 never \u548C any \u7684\u60C5\u51B5\u5E76\u4E0D\u5B8C\u5168\u76F8\u540C\uFF0C any \u5728\u76F4\u63A5<strong>\u4F5C\u4E3A\u5224\u65AD\u53C2\u6570\u65F6\u3001\u4F5C\u4E3A\u6CDB\u578B\u53C2\u6570\u65F6</strong>\u90FD\u4F1A\u4EA7\u751F\u8FD9\u4E00\u6548\u679C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u76F4\u63A5\u4F7F\u7528\uFF0C \u8FD4\u56DE\u7ED3\u679C\u96C6\u7684\u8054\u5408\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">t1</span> <span class="token operator">=</span> <span class="token builtin">any</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 1 | 2</span>

<span class="token comment">// \u901A\u8FC7\u6CDB\u578B\u53C2\u6570\u4F20\u5165\uFF0C \u540C\u6837\u8FD4\u56DE\u7ED3\u679C\u96C6\u7684\u8054\u5408\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">t2<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">t2Res</span> <span class="token operator">=</span> t2<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// 1 | 2</span>

<span class="token comment">// \u5982\u679C\u5224\u65AD\u6761\u4EF6\u662F any \u90A3\u4E48\u5224\u65AD\u4ECD\u7136\u4F1A\u8FDB\u884C</span>
<span class="token keyword">type</span> <span class="token class-name">s1</span> <span class="token operator">=</span> <span class="token builtin">any</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token keyword">type</span> <span class="token class-name">s2<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">s2Res</span> <span class="token operator">=</span> s2<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u800C never \u4EC5\u5728\u4F5C\u4E3A\u6CDB\u578B\u53C2\u6570\u65F6\u624D\u4F1A\u4EA7\u751F:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u76F4\u63A5\u4F7F\u7528\uFF0C \u5224\u65AD\u4ECD\u7136\u4F1A\u8FDB\u884C</span>
<span class="token keyword">type</span> <span class="token class-name">t3</span> <span class="token operator">=</span> <span class="token builtin">never</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token comment">// \u5F53\u901A\u8FC7\u6CDB\u578B\u53C2\u6570\u4F20\u5165\uFF0C \u4F1A\u8DF3\u8FC7\u5224\u65AD \u76F4\u63A5\u8FD4\u56DE never</span>
<span class="token keyword">type</span> <span class="token class-name">t4<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">t4Res</span> <span class="token operator">=</span> t4<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// never</span>

<span class="token comment">// \u5982\u679C\u5224\u65AD\u6761\u4EF6\u65F6 never\uFF0C \u8FD8\u662F\u4EC5\u5728\u4F5C\u4E3A\u6CDB\u578B\u53C2\u6570\u65F6\u5019\u624D\u8DF3\u8FC7\u5224\u65AD</span>
<span class="token keyword">type</span> <span class="token class-name">s3</span> <span class="token operator">=</span> <span class="token builtin">never</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">never</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token keyword">type</span> <span class="token class-name">s4<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">never</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">s4Res</span> <span class="token operator">=</span> s4<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// never</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FD9\u91CC\u7684 any\u3001 never \u4E24\u79CD\u60C5\u51B5\u90FD\u4E0D\u4F1A\u5B9E\u9645\u5730\u6267\u884C\u6761\u4EF6\u7C7B\u578B\uFF0C \u800C\u5728\u8FD9\u91CC\u6211\u4EEC\u8DF3\u8FC7\u5305\u88F9\u7684\u65B9\u5F0F\u8BA9\u5B83\u4E0D\u518D\u662F\u4E00\u4E2A\u5B64\u96F6\u96F6\u7684 never\uFF0C \u4E5F\u5C31\u53EF\u4EE5\u53BB\u6267\u884C\u5224\u65AD\u4E86\u3002</p><p>\u4E4B\u6240\u4EE5\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\u8981\u8FD9\u4E48\u8BBE\u8BA1\uFF0C \u6211\u4E2A\u4EBA\u7406\u89E3\u4E3B\u8981\u662F\u4E3A\u4E86\u5904\u7406\u8054\u5408\u7C7B\u578B\u8FD9\u79CD\u60C5\u51B5\u3002 \u5C31\u50CF\u6211\u4EEC\u5230\u73B0\u5728\u4E3A\u6B62\u7684\u4F2A\u4EE3\u7801\u90FD\u4E00\u76F4\u4F7F\u7528\u6570\u7EC4\u6765\u8868\u8FBE\u8054\u5408\u7C7B\u578B\u4E00\u6837\uFF0C \u5728\u7C7B\u578B\u4E16\u754C\u4E2D\u8054\u5408\u7C7B\u578B\u5C31\u50CF\u662F\u4E00\u4E2A\u96C6\u5408\u4E00\u6837\u3002 \u901A\u8FC7\u4F7F\u7528\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\uFF0C \u6211\u4EEC\u80FD\u8F7B\u6613\u5730\u8FDB\u884C\u96C6\u5408\u4E4B\u95F4\u7684\u8FD0\u7B97\uFF0C \u6BD4\u5982\u4EA4\u96C6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4E0E A &amp; B \u6548\u679C\u4E00\u81F4</span>
<span class="token keyword">type</span> <span class="token class-name">Intersection<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Intersection1<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">A</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token constant">B</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">IntersectionRes</span> <span class="token operator">=</span> Intersection<span class="token operator">&lt;</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// 2 | 3</span>
<span class="token keyword">type</span> <span class="token class-name">IntersectionRes</span> <span class="token operator">=</span> Intersection1<span class="token operator">&lt;</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// 1 | 2 | 3 (\u5373 A)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FDB\u4E00\u6B65\u7684\uFF0C \u5F53\u8054\u5408\u7C7B\u578B\u7684\u7EC4\u6210\u662F\u4E00\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\uFF08<code>keyof IObject</code>\uFF09, \u6B64\u65F6\u5BF9\u8FD9\u6837\u4E24\u4E2A\u7C7B\u578B\u96C6\u5408\u8FDB\u884C\u5904\u7406\uFF0C \u5F97\u5230\u5C5E\u6027\u540D\u7684\u4EA4\u96C6\uFF0C \u90A3\u6211\u4EEC\u5C31\u53EF\u4EE5\u5728\u6B64\u57FA\u7840\u4E0A\u83B7\u5F97\u4E24\u4E2A\u5BF9\u8C61\u7ED3\u6784\u7684\u4EA4\u96C6\u3002 \u9664\u6B64\u4E4B\u5916\uFF0C \u8FD8\u6709\u8BB8\u591A\u76F8\u5BF9\u590D\u6742\u7684\u573A\u666F\u53EF\u4EE5\u964D\u7EAC\u5230\u7C7B\u578B\u96C6\u5408\uFF0C \u5373\u8054\u5408\u7C7B\u578B\u7684\u5C42\u9762\uFF0C \u7136\u540E\u6211\u4EEC\u5C31\u53EF\u4EE5\u6109\u5FEB\u5730\u4F7F\u7528\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\u8FDB\u884C\u5404\u79CD\u5904\u7406\u4E86\u3002</p><h2 id="\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55" aria-hidden="true">#</a> \u6269\u5C55</h2><p>\u4E0A\u9762\u6211\u4EEC\u901A\u8FC7 hack \u7684\u624B\u6BB5\u5F97\u5230\u4E86 IsNever, \u90A3\u4F60\u4E00\u5B9A\u4F1A\u60F3\u662F\u5426\u80FD\u5B9E\u73B0 IsAny \u4E0E IsUnknown ? \u5F53\u7136\u53EF\u4EE5\uFF0C \u4E0D\u8FC7\u5177\u4F53\u5B9E\u73B0\u8981\u7A0D\u5FAE\u590D\u6742\u4E00\u4E9B\uFF0C \u5E76\u4E14\u5E76\u4E0D\u5B8C\u5168\u4F9D\u8D56\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B</p><h3 id="isany" tabindex="-1"><a class="header-anchor" href="#isany" aria-hidden="true">#</a> IsAny</h3><p>\u4E0A\u9762\u5DF2\u7ECF\u63D0\u5230\u4E86\u4E0D\u80FD\u901A\u8FC7 <code>any extends type</code> \u8FD9\u6837\u7684\u5F62\u5F0F\u6765\u6765\u5224\u65AD\u4E00\u4E2A\u7C7B\u578B\u662F\u5426 any\u3002 \u800C\u662F\u8981\u5229\u7528 any \u7684\u53E6\u4E00\u4E2A\u7279\u6027\uFF1A \u6DF1\u5316\u4E07\u5343\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IsAny<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token string">&#39;cqc&#39;</span> <span class="token keyword">extends</span> <span class="token string">&#39;qc&#39;</span> <span class="token operator">&amp;</span> <span class="token constant">T</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>&#39;cqc&#39; extends &#39;qc&#39;</code> \u5FC5\u7136\u4E0D\u6210\u7ACB\uFF0C \u800C\u4EA4\u53C9\u7C7B\u578B <code>&#39;qc&#39; &amp; T</code> \u4E5F\u5F88\u5947\u602A\uFF0C \u4ED6\u610F\u5473\u7740\u540C\u65F6\u7B26\u5408\u5B57\u9762\u91CF\u7C7B\u578B \u2018cqc\u2019 \u548C \u5B57\u9762\u91CF\u7C7B\u578B &#39;qc&#39; \u548C\u53E6\u5916\u4E00\u4E2A\u7C7B\u578B T. \u5728\u5B66\u4E60\u4EA4\u53C9\u7C7B\u578B\u65F6\u5019\u6211\u4EEC\u5DF2\u7ECF\u4E86\u89E3\u5230\uFF0C \u5BF9\u4E8E &#39;cqc&#39; \u8FD9\u6837\u7684\u5B57\u9762\u91CF\u7C7B\u578B\uFF0C \u53EA\u6709\u4F20\u5165\u5176\u672C\u8EAB\uFF0C \u5BF9\u5E94\u7684\u539F\u59CB\u7C7B\u578B, \u5305\u6DB5\u5176\u672C\u8EAB\u7684\u8054\u5408\u7C7B\u578B\uFF0C \u624D\u80FD\u5F97\u5230\u4E00\u4E2A\u6709\u610F\u4E49\u7684\u503C\uFF0C \u5E76\u4E14\u8FD9\u4E2A\u503C\u4E00\u5B9A\u662F\u5B83\u672C\u8EAB:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">t1</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token keyword">type</span> <span class="token class-name">t2</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token keyword">type</span> <span class="token class-name">t3</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token keyword">type</span> <span class="token class-name">t4</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span><span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u56E0\u4E3A\u4EA4\u53C9\u7C7B\u578B\u5C31\u50CF<strong>\u77ED\u677F\u6548\u5E94\u4E00\u6837\uFF0C \u5176\u6700\u7EC8\u8BA1\u7B97\u7684\u7C7B\u578B\u662F\u7531\u6700\u77ED\u7684\u90A3\u6839\u6728\u677F</strong>\uFF0C \u4E5F\u5C31\u662F\u6700\u7CBE\u786E\u7684\u90A3\u4E2A\u7C7B\u578B\u51B3\u5B9A\u7684\u3002 \u8FD9\u6837\u770B\uFF0C \u65E0\u8BBA\u5982\u4F55 <code>&#39;cqc&#39; extends &#39;qc&#39;</code> \u90FD\u4E0D\u4F1A\u6210\u7ACB\u3002</p><p>\u4F46\u4F5C\u4E3A\u4EE3\u8868\u4EFB\u610F\u7C7B\u578B\u7684 any\uFF0C \u4ED6\u7684\u5B58\u5728\u5C31\u50CF\u662F\u5F00\u5929\u8F9F\u5730\u7684\u57FA\u672C\u89C4\u5219\u4E00\u6837\uFF0C \u5982\u679C\u4EA4\u53C9\u7C7B\u578B\u4E2D\u4E00\u4E2A\u6210\u5458\u662F any\uFF0C \u90A3\u4E48\u77ED\u677F\u6548\u5E94\u5C31\u5931\u6548\u4E86\uFF0C \u6B64\u65F6\u6700\u7EC8\u7C7B\u578B\u5FC5\u7136\u662F any\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">t5</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token comment">// any</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="isunknown" tabindex="-1"><a class="header-anchor" href="#isunknown" aria-hidden="true">#</a> IsUnknown</h3><p><code>unknown extends T</code> \u65F6\u4EC5\u6709 T \u4E3A any \u6216\u8005 unknown \u65F6\u5019\uFF0C \u8FD9\u65F6\u5019\u53EA\u9700\u8981\u76F4\u63A5\u5224\u65AD T \u662F\u4E0D\u662F any \u5C31\u597D\u4E86:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IsUnknown<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">unknown</span></span>
 <span class="token operator">?</span> IsAny<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token boolean">true</span></span>
  <span class="token operator">?</span> <span class="token boolean">false</span>
  <span class="token operator">:</span> <span class="token boolean">true</span>
 <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,38);function P(I,S){const a=c("a-mark");return l(),r(k,null,[u,n("p",null,[b,m,d,p(a,null,{default:e(()=>[y]),_:1})]),g,w,n("p",null,[v,p(a,null,{default:e(()=>[h]),_:1}),x]),T,n("blockquote",null,[n("p",null,[f,p(a,null,{default:e(()=>[_]),_:1}),R])]),A,n("blockquote",null,[n("p",null,[V,p(a,null,{default:e(()=>[N]),_:1})])]),q],64)}var F=o(i,[["render",P],["__file","k.\u6761\u4EF6\u7C7B\u578B\u4E0Einfer.html.vue"]]);export{F as default};
