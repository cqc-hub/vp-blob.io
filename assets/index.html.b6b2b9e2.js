import{_ as c,r as o,o as l,a as u,d as n,e as a,w as i,F as r,f as s,b as p}from"./app.28445bf9.js";const k={},b=n("h1",{id:"",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#","aria-hidden":"true"},"#")],-1),m=n("h2",{id:"\u539F\u578B\u4E00\u628A\u68AD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u539F\u578B\u4E00\u628A\u68AD","aria-hidden":"true"},"#"),s(" \u539F\u578B\u4E00\u628A\u68AD")],-1),d={href:"https://juejin.cn/post/6844903984335945736#heading-5",target:"_blank",rel:"noopener noreferrer"},f=s("\u5982\u679C\u77E5\u9053\u4EE5\u4E0B\u51E0\u4E2A\u95EE\u9898, "),y=n("code",null,"\u539F\u578B",-1),h=s(" \u8FD9\u4E00\u7AE0\u8282\u53EF\u4EE5\u7565\u8FC7"),w=p(`<ul><li>\u4E3A\u4EC0\u4E48 <code>typeof</code> \u5224\u65AD <code>null</code> \u662F <code>Object</code> \u7C7B\u578B;</li><li><code>Function</code> \u548C <code>Object</code> \u662F\u4EC0\u4E48\u5173\u7CFB;</li><li><code>new</code> \u5173\u952E\u5B57\u5177\u4F53\u505A\u4E86\u4EC0\u4E48? \u624B\u5199?;</li><li><code>prototype</code> \u548C <code>__proto__</code> \u662F\u4EC0\u4E48\u5173\u7CFB? \u4EC0\u4E48\u60C5\u51B5\u4E0B\u76F8\u7B49?</li><li>ES5 \u5B9E\u73B0\u7EE7\u627F\u6709\u51E0\u79CD\u65B9\u5F0F, \u4F18\u7F3A\u70B9?</li><li>ES6 \u5982\u4F55\u5B9E\u73B0\u4E00\u4E2A\u7C7B</li><li>ES6 <code>extends</code> \u5173\u952E\u5B57\u5B9E\u73B0\u539F\u7406?</li></ul><img src="https://phsdevoss.eheren.com/pcloud/phs3.0/test/proto-classic.jpg" width="500" height="600"><ul><li>function Foo \u5C31\u662F\u4E00\u4E2A\u65B9\u6CD5, \u6BD4\u5982js \u5185\u7F6E\u7684 Array, String \u7B49</li><li>function Object \u5C31\u662F\u4E00\u4E2A Object</li><li>function Function \u5C31\u662F\u4E00\u4E2A Function</li><li>\u4EE5\u4E0A\u90FD\u662F function, \u6240\u4EE5 <code>.__proto__</code> \u90FD\u662F <code>Function.prototype</code></li></ul><h3 id="\u51FD\u6570\u5BF9\u8C61\u548C\u666E\u901A\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5BF9\u8C61\u548C\u666E\u901A\u5BF9\u8C61" aria-hidden="true">#</a> \u51FD\u6570\u5BF9\u8C61\u548C\u666E\u901A\u5BF9\u8C61</h3><p><img src="https://phsdevoss.eheren.com/pcloud/phs3.0/test/Snipaste_2023-04-26_15-22-52.jpg" alt="\u51FD\u6570\u5BF9\u8C61\u548C\u666E\u901A\u5BF9\u8C61"></p><p>\u4ECE\u4E0A\u9762\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA, \u51FD\u6570\u5BF9\u8C61\u548C\u666E\u901A\u5BF9\u8C61\u90FD\u662F\u5BF9\u8C61, <strong>\u5374\u5B58\u5728\u5DEE\u5F02</strong>.</p><p>\u5176\u5B9E\u5728 js \u4E2D, \u6211\u4EEC\u5C06\u5BF9\u8C61\u5206\u4E3A\u51FD\u6570\u5BF9\u8C61\u548C\u666E\u901A\u5BF9\u8C61. \u6240\u8C13\u51FD\u6570\u5BF9\u8C61, \u5176\u5B9E\u5C31\u662F js \u7684\u7528\u51FD\u6570\u6765\u6A21\u62DF\u7684\u7C7B\u5B9E\u73B0, js \u4E2D\u7684 Object, Function \u5C31\u662F\u5178\u578B\u7684\u51FD\u6570\u5BF9\u8C61.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fn3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;console.log(name);&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">new</span> <span class="token function">Function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">typeof</span> Object<span class="token punctuation">;</span> <span class="token comment">// function</span>
<span class="token keyword">typeof</span> Function<span class="token punctuation">;</span> <span class="token comment">// function</span>

<span class="token keyword">typeof</span> fn1<span class="token punctuation">;</span> <span class="token comment">// function</span>
<span class="token keyword">typeof</span> fn2<span class="token punctuation">;</span> <span class="token comment">// function</span>
<span class="token keyword">typeof</span> fn3<span class="token punctuation">;</span> <span class="token comment">// function</span>

<span class="token keyword">typeof</span> obj1<span class="token punctuation">;</span> <span class="token comment">// object</span>
<span class="token keyword">typeof</span> obj2<span class="token punctuation">;</span> <span class="token comment">// object</span>
<span class="token keyword">typeof</span> obj3<span class="token punctuation">;</span> <span class="token comment">// object</span>
<span class="token keyword">typeof</span> obj4<span class="token punctuation">;</span> <span class="token comment">// object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u53EF\u4EE5\u770B\u51FA, <strong>\u6240\u6709 Function \u7684\u5B9E\u4F8B\u90FD\u662F\u51FD\u6570\u5BF9\u8C61, \u5176\u4ED6\u7684\u5747\u4E3A\u666E\u901A\u5BF9\u8C61, \u5305\u62ECFunction\u5B9E\u4F8B\u7684\u5B9E\u4F8B, \u4E5F\u5C31\u662F\u51FD\u6570\u5BF9\u8C61</strong></p><blockquote><p><code>Function.__proto__ === Function.prototype</code></p></blockquote><p>js \u4E2D\u4E07\u7269\u7686\u5BF9\u8C61, \u800C\u5BF9\u8C61\u7686\u51FA\u81EA\u6784\u9020\u51FD\u6570.</p><h3 id="proto" tabindex="-1"><a class="header-anchor" href="#proto" aria-hidden="true">#</a> <code>__proto__</code></h3><blockquote><p>\u9996\u5148\u6211\u4EEC\u8981\u660E\u786E\u4E24\u70B9: 1.<code>__proto__</code>, <code>constructor</code> \u90FD\u662F\u5BF9\u8C61\u72EC\u6709\u7684; 2. <code>prototype</code> \u662F\u51FD\u6570\u72EC\u6709\u7684</p></blockquote><p>\u4F46\u662F\u5728 js \u4E2D, \u51FD\u6570\u4E5F\u662F\u5BF9\u8C61, \u6240\u4EE5\u51FD\u6570\u4E5F\u62E5\u6709 <code>__proto__</code>, <code>constructor</code>.</p>`,14),_=s("`\u5B50.__proto__ === \u7236.prototype`"),g=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// \u5B50.__proto__ === \u7236.prototype.</span>
  <span class="token keyword">const</span> fn1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> fn2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


  fn2<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> fn1<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
  fn1<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>constructor \u5C5E\u6027\u4E5F\u662F<strong>\u5BF9\u8C61</strong>\u6240\u62E5\u6709\u7684, \u5B83\u662F<strong>\u4E00\u4E2A\u5BF9\u8C61\u6307\u5411\u4E00\u4E2A\u51FD\u6570, \u8FD9\u4E2A\u51FD\u6570\u5C31\u662F\u8BE5\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570</strong></p><blockquote><p>\u6BCF\u4E00\u4E2A\u5BF9\u8C61\u90FD\u6709\u5176\u6784\u9020\u51FD\u6570, \u672C\u8EAB\u6216\u7EE7\u627F\u800C\u6765. \u5355\u4ECE<code>constructor</code>\u8FD9\u4E2A\u5C5E\u6027\u6765\u8BB2, \u53EA\u6709 <code>prototype</code> \u5BF9\u8C61\u624D\u6709. \u6BCF\u4E2A\u51FD\u6570\u5728\u521B\u5EFA\u7684\u65F6\u5019, js \u4F1A\u540C\u65F6\u521B\u5EFA\u4E00\u4E2A\u8BE5\u51FD\u6570\u5BF9\u5E94\u7684 <code>prototype</code> \u5BF9\u8C61, \u800C <code>\u51FD\u6570\u521B\u5EFA\u7684\u5BF9\u8C61.__proto__ === \u8BE5\u51FD\u6570.prototype</code>, \u8BE5<code>\u51FD\u6570.prototype.constructor === \u8BE5\u51FD\u6570\u672C\u8EAB</code>, \u6240\u4EE5\u901A\u8FC7\u51FD\u6570\u521B\u5EFA\u7684\u5BF9\u8C61\u5373\u4F7F\u81EA\u5DF1\u6CA1\u6709 <code>constructor</code> \u5C5E\u6027, \u4E5F\u80FD\u901A\u8FC7 <code>__proto__</code> \u627E\u5230\u5BF9\u5E94\u7684 <code>constructor</code>, \u6240\u4EE5\u4EFB\u4F55\u5BF9\u8C61\u6700\u7EC8\u90FD\u53EF\u4EE5\u627E\u5230\u5176\u5BF9\u5E94\u7684\u6784\u9020\u51FD\u6570.</p></blockquote><p>\u552F\u4E00\u7279\u6B8A\u7684\u5C31\u662F <code>Function</code>, js \u539F\u578B\u7684\u8001\u7956\u5B97, \u5B83\u662F\u4ED6\u81EA\u5DF1\u7684\u6784\u9020\u51FD\u6570. \u6240\u4EE5 <code>Function.prototype === Function.__proto__</code>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
Function<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
Function<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="typeof-instanceof" tabindex="-1"><a class="header-anchor" href="#typeof-instanceof" aria-hidden="true">#</a> typeof &amp;&amp; instanceof</h3>`,7),v={id:"\u57FA\u672C\u7528\u6CD5",tabindex:"-1"},j=n("a",{class:"header-anchor",href:"#\u57FA\u672C\u7528\u6CD5","aria-hidden":"true"},"#",-1),x=s(),F={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof",target:"_blank",rel:"noopener noreferrer"},O=s("\u57FA\u672C\u7528\u6CD5"),q=p(`<p>typeof \u652F\u6301\u7684\u7C7B\u578B:</p><ul><li>undefined</li><li>boolean</li><li>number</li><li>bigint</li><li>string</li><li>symbol</li><li>function</li></ul><p>typeof \u5176\u4ED6\u4EFB\u4F55\u5BF9\u8C61 === &#39;object&#39;</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">typeof</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&#39;cqc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// object</span>
<span class="token keyword">typeof</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// object  \u8FD9\u662F js \u8BBE\u8BA1\u7684\u4E00\u4E2A bug</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof" aria-hidden="true">#</a> instanceof</h4><p>instanceof \u53EF\u4EE5\u5224\u65AD\u4E00\u4E2A\u5B9E\u4F8B\u662F\u5426\u662F\u5176\u7236\u7C7B\u578B\u6216\u8005\u7956\u5148\u7C7B\u578B\u7684\u5B9E\u4F8B</p><blockquote><p>object instanceof constructor</p></blockquote><p><code>instanceof</code> \u548C <code>typeof</code> \u975E\u5E38\u7C7B\u4F3C, <code>instanceof</code> \u8FD0\u7B97\u7B26 \u7528\u6765\u68C0\u6D4B <code>constructor.prototype</code> \u662F\u5426\u5B58\u5728\u4E8E\u53C2\u6570 <code>object</code> \u539F\u578B\u94FE\u4E0A</p><p>\u57FA\u672C\u7528\u6CD5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">C</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">D</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

o <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">;</span> <span class="token comment">// true</span>
o <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token constant">D</span></span><span class="token punctuation">;</span> <span class="token comment">// false</span>

o <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span> <span class="token comment">// true, \u56E0\u4E3A Object.prototype.isPrototypeOf(o) === true</span>
<span class="token constant">C</span><span class="token punctuation">.</span>prototype <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span> <span class="token comment">// true, \u540C\u4E0A</span>


<span class="token constant">C</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
o <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">;</span> <span class="token comment">// false, C.prototype \u6307\u5411\u4E86\u4E00\u4E2A\u7A7A\u5BF9\u8C61,\u8FD9\u4E2A\u7A7A\u5BF9\u8C61\u4E0D\u5728 o \u7684\u539F\u578B\u94FE\u4E0A</span>

<span class="token constant">D</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> o2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">D</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

o2 <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>Object <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token builtin">Function</span> <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token builtin">Function</span></span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token builtin">Function</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

Number <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
String <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E3A\u4EC0\u4E48<code>Function | Object instance of \u81EA\u5DF1\u6210\u7ACB</code>, \u800C\u5176\u4ED6\u7C7B instance of \u81EA\u5DF1\u4E0D\u6210\u7ACB\u5462?</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">myInstanceof</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> model<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> proto <span class="token operator">=</span> model<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  target <span class="token operator">=</span> target<span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>

  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">===</span> proto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>

    target <span class="token operator">=</span> target<span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="new-\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#new-\u5173\u952E\u5B57" aria-hidden="true">#</a> new \u5173\u952E\u5B57</h3><p><code>new</code> \u90FD\u5E72\u4E86\u5565?</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>isHandsome <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hihihi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> cqc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;cqc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

cqc<span class="token punctuation">.</span>isHandsome<span class="token punctuation">;</span> <span class="token comment">// true</span>
cqc<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hihihi</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="new-\u624B\u5199" tabindex="-1"><a class="header-anchor" href="#new-\u624B\u5199" aria-hidden="true">#</a> new \u624B\u5199</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">_new</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">constructor<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> constructor <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token string">&quot;constructor \u5FC5\u987B\u662F\u4E00\u4E2A\u65B9\u6CD5&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token keyword">const</span> newObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>constructor<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">constructor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>newObj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5982\u679C\u6784\u9020\u51FD\u6570\u6709\u8FD4\u56DE\u503C\uFF0C\u90A3\u4E48\u53EA\u8FD4\u56DE\u6784\u9020\u51FD\u6570\u8FD4\u56DE\u7684\u5BF9\u8C61\u3002</span>
  <span class="token keyword">return</span> value <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">?</span> value <span class="token operator">:</span> newObj<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


<span class="token keyword">const</span> cqc <span class="token operator">=</span> <span class="token function">_new</span><span class="token punctuation">(</span>Person<span class="token punctuation">,</span> <span class="token string">&#39;cqc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u624B\u5199promise" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199promise" aria-hidden="true">#</a> \u624B\u5199Promise</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyPromise</span> <span class="token punctuation">{</span>
  state<span class="token operator">:</span> <span class="token string">&#39;pending&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;fulfilled&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;rejected&#39;</span> <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">;</span>
  successTask<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  failTask<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  err<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>successTask <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>failTask <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> v<span class="token punctuation">;</span>

        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>successTask<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">o</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>err <span class="token operator">=</span> err<span class="token punctuation">;</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>failTask<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">o</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> reject<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_resolve<span class="token punctuation">,</span> _reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      resolve <span class="token operator">&amp;&amp;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>successTask<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token keyword">instanceof</span> <span class="token class-name">MyPromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>_resolve<span class="token punctuation">,</span> _reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">_resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      reject <span class="token operator">&amp;&amp;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>failTask<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token keyword">instanceof</span> <span class="token class-name">MyPromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>_resolve<span class="token punctuation">,</span> _reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">_reject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">catch</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">resolve</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">r</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">j</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br></div></div><h2 id="\u4E8B\u4EF6\u8F6E\u8BE2" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u8F6E\u8BE2" aria-hidden="true">#</a> \u4E8B\u4EF6\u8F6E\u8BE2</h2><p>js \u4E2D, \u6240\u6709\u4EFB\u52A1\u53EF\u4EE5\u5206\u4E3A\u5B8F\u4EFB\u52A1\u548C\u5FAE\u4EFB\u52A1\u4E24\u79CD</p><ul><li>\u5B8F\u4EFB\u52A1: \u5728\u4E3B\u7EBF\u7A0B\u4E0A\u6392\u961F\u6267\u884C\u7684\u4EFB\u52A1, \u53EA\u6709\u524D\u4E00\u4E2A\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5, \u624D\u80FD\u6267\u884C\u4E0B\u4E00\u4E2A\u4EFB\u52A1 <ul><li>script, setTimeout, setInterval \u7B49\u90FD\u5C5E\u4E8E\u5B8F\u4EFB\u52A1</li></ul></li><li>\u5FAE\u4EFB\u52A1: \u4E0D\u8FDB\u5165\u4E3B\u7EBF\u7A0B, \u800C\u8FDB\u5165 \u5FAE\u4EFB\u52A1\u5217\u8868 \u7684\u4EFB\u52A1 <ul><li>Promise, MutationObserver</li></ul></li></ul><h3 id="\u4E8B\u4EF6\u8F6E\u8BE2\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u8F6E\u8BE2\u8FC7\u7A0B" aria-hidden="true">#</a> \u4E8B\u4EF6\u8F6E\u8BE2\u8FC7\u7A0B</h3><ul><li><ol><li>\u4EE3\u7801\u6267\u884C\u8FC7\u7A0B\u4E2D, \u5B8F\u4EFB\u52A1\u548C\u5FAE\u4EFB\u52A1\u653E\u5728\u4E0D\u540C\u7684\u4EFB\u52A1\u961F\u5217\u4E2D</li></ol></li><li><ol start="2"><li>\u5F53\u67D0\u4E2A\u5B8F\u4EFB\u52A1\u6267\u884C\u5B8C\u540E, \u4F1A\u67E5\u770B\u5FAE\u4EFB\u52A1\u961F\u5217\u662F\u5426\u6709\u4EFB\u52A1, \u5982\u679C\u6709, \u6267\u884C\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\u7684<strong>\u6240\u6709\u4EFB\u52A1</strong></li></ol></li><li><ol start="3"><li>\u5FAE\u4EFB\u52A1\u961F\u5217\u6267\u884C\u5B8C\u6210\u540E, \u4F1A\u8BFB\u53D6\u4EFB\u52A1\u961F\u5217\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5B8F\u4EFB\u52A1(\u6CE8\u610F\u5B8F\u4EFB\u52A1\u662F\u4E00\u4E2A\u4E2A\u53D6), \u6267\u884C\u8BE5\u5B8F\u4EFB\u52A1, \u5982\u679C\u6267\u884C\u8FC7\u7A0B\u4E2D, \u9047\u5230\u5FAE\u4EFB\u52A1, \u4F9D\u6B21\u52A0\u5165\u5FAE\u4EFB\u52A1\u961F\u5217</li></ol></li><li><ol start="4"><li>\u5B8F\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u540E, \u518D\u6B21\u8BFB\u53D6\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\u7684\u4EFB\u52A1, \u4F9D\u6B21\u7C7B\u63A8</li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * start
 * promise0
 * promise1
 * promise5
 *
 * timer1
 * promise2
 * promise4
 *
 * timer2
 * promise3
 */</span>


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div>`,26);function P(T,C){const t=o("ExternalLinkIcon"),e=o("a-mark");return l(),u(r,null,[b,m,n("p",null,[n("a",d,[f,y,h,a(t)])]),w,a(e,null,{default:i(()=>[_]),_:1}),g,n("h4",v,[j,x,n("a",F,[O,a(t)])]),q],64)}var M=c(k,[["render",P],["__file","index.html.vue"]]);export{M as default};
