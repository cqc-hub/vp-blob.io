import{_ as n,b as s}from"./app.28445bf9.js";const a={},p=s(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><h2 id="\u65E0\u5904\u4E0D\u5728\u7684\u4E0A\u4E0B\u6587" tabindex="-1"><a class="header-anchor" href="#\u65E0\u5904\u4E0D\u5728\u7684\u4E0A\u4E0B\u6587" aria-hidden="true">#</a> \u65E0\u5904\u4E0D\u5728\u7684\u4E0A\u4E0B\u6587</h2><p>\u4E3E\u4E00\u4E2A\u6700\u5E38\u89C1\u7684\u4F8B\u5B50</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">,</span> source<span class="token punctuation">,</span> line<span class="token punctuation">,</span> col<span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u91CC\uFF0C \u867D\u7136\u6211\u4EEC\u5E76\u6CA1\u6709\u4E3A onerror \u7684\u5404\u4E2A\u53C2\u6570\u58F0\u660E\u7C7B\u578B\uFF0C \u4F46\u662F\u5B83\u4EEC\u4E5F\u5DF2\u7ECF\u83B7\u5F97\u4E86\u6B63\u786E\u7684\u7C7B\u578B\u3002</p><p>\u5F53\u7136\u4F60\u80AF\u5B9A\u80FD\u731C\u5230\uFF0C \u8FD9\u662F\u56E0\u4E3A onerror \u7684\u7C7B\u578B\u58F0\u660E\u5DF2\u7ECF\u5185\u7F6E\u4E86\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Handler</span> <span class="token punctuation">{</span>
 onerror<span class="token operator">:</span> OnErrorEventHandlerNonNull<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">OnErrorEventHandlerNonNull</span> <span class="token punctuation">{</span>
 <span class="token punctuation">(</span>
  event<span class="token operator">:</span> Event <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  source<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  lineno<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  error<span class="token operator">?</span><span class="token operator">:</span> Error
 <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6211\u4EEC\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u7B7E\u540D\uFF0C \u4E5F\u662F\u4E00\u6837\u7684\u6548\u679C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">CustomHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> handler<span class="token operator">:</span> <span class="token function-variable function">CustomHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// \u4E5F\u63A8\u5BFC\u51FA\u6765\u4E86\u53C2\u6570\u7C7B\u578B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u9664\u4E86\u53C2\u6570\u7C7B\u578B\uFF0C \u8FD4\u56DE\u503C\u7C7B\u578B\u540C\u6837\u4F1A\u7EB3\u5165\u7BA1\u63A7\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">const</span> struct<span class="token operator">:</span> <span class="token punctuation">{</span>
 handler<span class="token operator">:</span> CustomHandler<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

struct<span class="token punctuation">.</span><span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">//  Type &#39;void&#39; is not assignable to type &#39;boolean&#39;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5728\u8FD9\u91CC\uFF0C\u53C2\u6570\u7684\u7C7B\u578B\u57FA\u4E8E\u5176\u4E0A\u4E0B\u6587\u7C7B\u578B\u4E2D\u7684\u53C2\u6570\u7C7B\u578B\u4F4D\u7F6E\u6765\u8FDB\u884C\u5339\u914D\uFF0C arg1 \u5BF9\u5E94\u5230 name\uFF08string\uFF09\uFF0C arg2 \u5BF9\u5E94\u5230 age\uFF08number\uFF09\u3002 \u8FD9\u5C31\u662F\u4E0A\u4E0B\u6587\u7C7B\u578B\u7684\u6838\u5FC3\u7406\u5FF5\uFF1A <strong>\u57FA\u4E8E\u4F4D\u7F6E\u7684\u7C7B\u578B\u63A8\u5BFC</strong>\u3002 \u540C\u65F6\uFF0C \u76F8\u5BF9\u4E8E\u6211\u4EEC\u4E0A\u9762\u63D0\u5230\u7684\u57FA\u4E8E\u5F00\u53D1\u8005\u8F93\u5165\u8FDB\u884C\u7684\u7C7B\u578B\u63A8\u5BFC\uFF0C \u4E0A\u4E0B\u6587\u7C7B\u578B\u66F4\u50CF\u662F<strong>\u53CD\u65B9\u5411\u7684\u7C7B\u578B\u63A8\u5BFC</strong>\uFF0C \u4E5F\u5C31\u662F<strong>\u57FA\u4E8E\u5DF2\u5B9A\u4E49\u7684\u7C7B\u578B\u6765\u89C4\u8303\u5F00\u53D1\u8005\u7684\u4F7F\u7528</strong>\u3002</p><p>\u5728\u4E0A\u4E0B\u6587\u4E2D\uFF0C \u6211\u4EEC\u5B9E\u73B0\u7684\u8868\u8FBE\u5F0F\u53EF\u4EE5\u53EA\u4F7F\u7528\u66F4\u5C11\u7684\u53C2\u6570\uFF0C \u800C\u4E0D\u80FD\u4F7F\u7528\u66F4\u591A\uFF0C \u8FD9\u8FD8\u662F\u56E0\u4E3A\u4E0A\u4E0B\u6587\u7C7B\u578B\u57FA\u4E8E\u4F4D\u7F6E\u7684\u5339\u914D\uFF0C \u4E00\u65E6\u53C2\u6570\u4E2A\u6570\u8D85\u8FC7\u5B9A\u4E49\u7684\u6570\u91CF\uFF0C \u90A3\u5C31\u6CA1\u6CD5\u8FDB\u884C\u5339\u914D\u4E86\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u6B63\u5E38</span>

window<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">,</span> source<span class="token punctuation">,</span> lineno<span class="token punctuation">,</span> col<span class="token punctuation">,</span> error<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// error</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E0A\u4E0B\u6587\u7C7B\u578B\u4E5F\u53EF\u4EE5\u8FDB\u884C \u2018\u5D4C\u5957\u2019 \u60C5\u51B5\u4E0B\u7684\u7C7B\u578B\u63A8\u5BFC\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">let</span> <span class="token function-variable function">func</span><span class="token operator">:</span> <span class="token punctuation">(</span>raw<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>input<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

<span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token punctuation">(</span>raw<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C \u4E0A\u4E0B\u6587\u7C7B\u578B\u63A8\u5BFC\u80FD\u529B\u4E5F\u4F1A\u5931\u6548\uFF0C \u6BD4\u5982\u8FD9\u91CC\u6211\u4EEC\u4F7F\u7528\u4E00\u4E2A\u7531\u51FD\u6570\u7EC4\u6210\u7684\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
 foo<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token keyword">extends</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
 bar<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> f1<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>input<span class="token operator">:</span> Foo<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>input<span class="token operator">:</span> Bar<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function-variable function">f1</span> <span class="token operator">=</span> <span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// input \u662F any</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6211\u4EEC\u9884\u671F\u7ED3\u679C\u662F input \u4E3A <code>Foo | Bar</code> \u7C7B\u578B\uFF0C \u4E5F\u5C31\u662F\u6240\u6709\u7B26\u5408\u7ED3\u6784\u7684\u51FD\u6570\u7C7B\u578B\u7684\u53C2\u6570\uFF0C \u4F46\u5374\u5931\u8D25\u4E86\u3002</p><p>\u8FD9\u662F\u56E0\u4E3A typescript \u4E2D\u7684\u4E0A\u4E0B\u6587\u7C7B\u578B\u76EE\u524D\u6682\u65F6\u4E0D\u652F\u6301\u8FD9\u4E00\u5224\u65AD\u53D1\u58EB\uFF08\u800C\u4E0D\u662F\u8FD9\u4E0D\u5C5E\u4E8E\u4E0A\u4E0B\u6587\u7C7B\u578B\u7684\u80FD\u529B\u8303\u56F4\uFF09\u3002</p><p>\u4F60\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u53C2\u6570\u7684\u51FD\u6570\u7B7E\u540D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> f2<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>input<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function-variable function">f2</span> <span class="token operator">=</span> <span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// input: Foo | Bar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5982\u679C\u6B64\u65F6\u5C06\u8FD9\u4E24\u4E2A\u8054\u5408\u7C7B\u578B\u518D \u5D4C\u5957\u4E00\u5C42\uFF0C \u6B64\u65F6\u4E0A\u4E0B\u6587\u7C7B\u578B\u53CD\u800C\u6B63\u5E38\u4E86\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> f3<span class="token operator">:</span>
 <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>raw<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span>input<span class="token operator">:</span> Foo<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span>
 <span class="token operator">|</span> <span class="token punctuation">{</span>
   <span class="token punctuation">(</span>raw<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span>input<span class="token operator">:</span> Bar<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// raw: number</span>
<span class="token function-variable function">f3</span> <span class="token operator">=</span> <span class="token punctuation">(</span>raw<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 <span class="token comment">// input: Bar</span>
 <span class="token keyword">return</span> <span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u91CC\u88AB\u63A8\u5BFC\u4E3A Bar \u7684\u539F\u56E0\uFF0C \u5176\u5B9E\u8FD8\u548C\u6211\u4EEC\u6B64\u524D\u4E86\u89E3\u7684\u534F\u53D8\u3001\u9006\u53D8\u6709\u5173\u3002 \u4EFB\u4F55\u63A5\u6536 Foo \u7C7B\u578B\u53C2\u6570\u7C7B\u578B\u7684\u5730\u65B9\uFF0C \u90FD\u53EF\u4EE5\u63A5\u6536\u4E00\u4E2A Bar \u53C2\u6570\uFF0C \u56E0\u6B64\u63A8\u5BFC\u5230 Bar\u66F4\u5B89\u5168\uFF08Bar extends Foo\uFF09</p><h2 id="void-\u8FD4\u56DE\u503C\u7C7B\u578B\u4E0B\u7684\u7279\u6B8A\u60C5\u51B5" tabindex="-1"><a class="header-anchor" href="#void-\u8FD4\u56DE\u503C\u7C7B\u578B\u4E0B\u7684\u7279\u6B8A\u60C5\u51B5" aria-hidden="true">#</a> void \u8FD4\u56DE\u503C\u7C7B\u578B\u4E0B\u7684\u7279\u6B8A\u60C5\u51B5</h2><p>\u4E0A\u9762\u8BB2\u5230\uFF0C \u4E0A\u4E0B\u6587\u7C7B\u578B\u540C\u6837\u4F1A\u63A8\u5BFC\u5E76\u7EA6\u675F\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C \u4F46\u5B58\u5728\u8FD9\u4E48\u4E2A\u7279\u6B8A\u60C5\u51B5\uFF0C \u5F53\u5185\u7F6E\u51FD\u6570\u7C7B\u578B\u7684\u8FD4\u56DE\u503C\u7C7B\u578B \u662F void \u65F6\u5019\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">CustomHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> handler1<span class="token operator">:</span> <span class="token function-variable function">CustomHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> handler2<span class="token operator">:</span> <span class="token function-variable function">CustomHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;cqc&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> handler3<span class="token operator">:</span> <span class="token function-variable function">CustomHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4F60\u4F1A\u53D1\u73B0\u5728\u8FD9\u4E2A\u65F6\u5019\uFF0C \u6211\u4EEC\u7684\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\u53D8\u6210\u4E86\u4E94\u82B1\u516B\u95E8\u7684\u6837\u5B50\uFF0C \u800C\u4E14\u8FD8\u90FD\u4E0D\u4F1A\u62A5\u9519\uFF01\uFF1F \u540C\u6837\u7684\uFF0C \u8FD9\u4E5F\u662F\u4E00\u6761\u4E16\u754C\u5E95\u5C42\u7684\u89C4\u5219\uFF0C <strong>\u4E0A\u4E0B\u6587\u7C7B\u578B\u5BF9\u4E8E void \u8FD4\u56DE\u503C\u7C7B\u578B\u7684\u51FD\u6570\uFF0C \u5E76\u4E0D\u4F1A\u771F\u7684\u8981\u6C42\u5B83\u5565\u90FD\u4E0D\u80FD\u8FD4\u56DE</strong>\u3002 \u7136\u800C\uFF0C \u867D\u7136\u8FD9\u4E9B\u51FD\u6570\u53EF\u4EE5\u5B9E\u73B0\u8FD4\u56DE\u4EFB\u610F\u7C7B\u578B\u7684\u503C\uFF0C \u4F46\u662F<strong>\u5BF9\u4E8E\u8C03\u7528\u7ED3\u679C\u7684\u7C7B\u578B\uFF0C \u4ECD\u7136\u662F void</strong>\u3002</p><p><code>const r1 = handler1(&#39;cqc&#39;, 233); // void</code></p><p>\u8FD9\u770B\u8D77\u6765\u662F\u4E00\u79CD\u5F88\u5947\u602A\u7684\u3001\u9519\u8BEF\u7684\u884C\u4E3A\uFF0C \u4F46\u5B9E\u9645\u4E0A\uFF0C \u6211\u4EEC\u65E5\u5E38\u5F00\u53D1\u4E2D\u7684\u5F88\u591A\u4EE3\u7801\u90FD\u9700\u8981\u8FD9\u79CD\u884C\u4E3A\u624D\u4E0D\u4F1A\u62A5\u9519\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> list<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD9\u662F\u6211\u4EEC\u5E38\u7528\u7684\u7B80\u5199\u65B9\u5F0F\uFF0C \u7136\u800C\uFF0C push \u65B9\u6CD5\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A number \u7C7B\u578B\uFF08push \u540E\u6570\u7EC4\u7684\u957F\u5EA6\uFF09\uFF0C \u800C forEach \u7684\u4E0A\u4E0B\u6587\u58F0\u660E\u4E2D\u8981\u6C42\u8FD4\u56DE\u503C \u662F void \u7C7B\u578B\u3002 \u800C\u5982\u679C\u6B64\u65F6 void \u7C7B\u578B\u771F\u7684\u4E0D\u5141\u8BB8\u4EFB\u4F55\u8FD4\u56DE\u503C\uFF0C \u90A3\u8FD9\u91CC\u6211\u4EEC\u5C31\u9700\u8981\u591A\u5957\u4E00\u4E2A\u4EE3\u7801\u5757\u624D\u80FD\u786E\u4FDD\u7C7B\u578B\u7B26\u5408\u4E86\u3002</p><p>\u4F46\u8FD9\u771F\u7684\u6709\u5FC5\u8981\u561B\uFF1F <strong>\u5BF9\u4E8E\u4E00\u4E2A void \u7C7B\u578B\u7684\u51FD\u6570\uFF0C \u6211\u4EEC\u771F\u7684\u4F1A\u53BB\u6D88\u8D39\u4ED6\u7684\u8FD4\u56DE\u503C\u561B\uFF1F \u65E2\u7136\u4E0D\u4F1A\uFF0C \u90A3\u4E48\u4ED6\u60F3\u8FD4\u56DE\u4EC0\u4E48\uFF0C \u5168\u51ED\u4ED6\u4E50\u610F\u597D\u4E86</strong></p><h2 id="\u62D3\u5C55" tabindex="-1"><a class="header-anchor" href="#\u62D3\u5C55" aria-hidden="true">#</a> \u62D3\u5C55</h2><h3 id="\u5C06\u66F4\u5C11\u53C2\u6570\u7684\u51FD\u6570\u8D4B\u503C\u7ED9\u5177\u6709\u66F4\u591A\u53C2\u6570\u7684\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5C06\u66F4\u5C11\u53C2\u6570\u7684\u51FD\u6570\u8D4B\u503C\u7ED9\u5177\u6709\u66F4\u591A\u53C2\u6570\u7684\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u5C06\u66F4\u5C11\u53C2\u6570\u7684\u51FD\u6570\u8D4B\u503C\u7ED9\u5177\u6709\u66F4\u591A\u53C2\u6570\u7684\u51FD\u6570\u7C7B\u578B</h3><p>\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C \u6211\u4EEC\u770B\u5230\u4E86\u8FD9\u6837\u4E00\u4E32\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> list<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728 forEach \u7684\u51FD\u6570\u4E2D\uFF0C \u6211\u4EEC\u4F1A\u6D88\u8D39 list \u7684\u6BCF\u4E00\u4E2A\u6210\u5458\u3002 \u4F46\u6211\u4EEC\u6709\u65F6\u4E5F\u4F1A\u9047\u5230\u5E76\u4E0D\u5B9E\u9645\u6D88\u8D39\u6570\u7EC4\u6210\u5458\u7684\u60C5\u51B5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>otherFactory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8FD9\u4E2A\u65F6\u5019\uFF0C \u6211\u4EEC\u5B9E\u9645\u4E0A\u5C31\u662F\u5728<strong>\u5C06\u66F4\u5C11\u53C2\u6570\u7684\u51FD\u6570\u8D4B\u503C\u7ED9\u5177\u6709\u66F4\u591A\u53C2\u6570\u7684\u51FD\u6570\u7C7B\u578B</strong>\u3002</p><p>\u518D\u770B\u4E00\u4E2A\u66F4\u660E\u663E\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">handler</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">useHandler</span><span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>arg1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> arg2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token function">callback</span><span class="token punctuation">(</span><span class="token string">&#39;cqc&#39;</span><span class="token punctuation">,</span> <span class="token number">233</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">useHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>handler \u51FD\u6570\u7684\u7C7B\u578B\u7B7E\u540D\u5F88\u660E\u663E\u4E0E useHandler \u51FD\u6570\u7684 callback \u7C7B\u578B\u7B7E\u540D\u5E76\u4E0D\u4E00\u81F4\uFF0C \u90A3\u4E48\u5C31\u9700\u8981\u4E3A handler \u5728\u58F0\u660E\u4E00\u4E2A\u989D\u5916\u7684\u5BF9\u5E94\u5230arg2 \u7684\u53C2\u6570\uFF0C \u7136\u800C\u6211\u4EEC\u7684handler\u4EE3\u7801\u91CC\u5B9E\u9645\u4E0A\u5E76\u6CA1\u6709\u53BB\u6D88\u8D39\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002</p><p>\u8FD9\u5B9E\u9645\u4E0A\u5728 JavaScript \u4E2D\u4E5F\u662F\u6211\u4EEC\u7ECF\u5E38\u4F7F\u7528\u7684\u65B9\u5F0F\uFF1A <strong>\u4F7F\u7528\u66F4\u5C11\u5165\u53C2\u7684\u51FD\u6570\u6765\u4F5C\u4E3A\u4E00\u4E2A\u9884\u671F\u66F4\u591A\u5165\u53C2\u51FD\u6570\u53C2\u6570\u7684\u5B9E\u73B0</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">const</span> list<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u5C31\u50CF\u5B9E\u9645\u8FD9\u91CC map \u8981\u6C42\u4F20\u5165</span>
<span class="token comment">// callbackfn: (value: number, index: number, array: any[]) =&gt; void, thisArg?: any</span>
<span class="token comment">// \u6211\u4EEC\u76F4\u63A5\u7528\u66F4\u5C11\u53C2\u6570\u7684\u51FD\u6570\u6765\u8FDB\u884C\u8C03\u7528</span>
list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>o <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// doSomething...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,46);function t(e,o){return p}var l=n(a,[["render",t],["__file","m.\u53CD\u5411\u7C7B\u578B\u63A8\u5BFC.html.vue"]]);export{l as default};
